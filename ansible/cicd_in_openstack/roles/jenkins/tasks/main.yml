---
- name: Install dependencies
  ansible.builtin.include_tasks:
    file: install_dependencies.yml

- name: Ensure the directory of /usr/lib/systemd/system/jenkins.service.d exists
  ansible.builtin.file:
    path: /usr/lib/systemd/system/jenkins.service.d
    mode: "775"
    state: directory

- name: Create jenkins.conf file
  ansible.builtin.copy:
    src: jenkins.conf
    dest: /usr/lib/systemd/system/jenkins.service.d/jenkins.conf
    mode: "644"

- name: Ensure the directory of /var/lib/jenkins/init.groovy.d exists
  ansible.builtin.file:
    path: /var/lib/jenkins/init.groovy.d
    mode: "755"
    state: directory

- name: Create .groovy file
  ansible.builtin.template:
    src: basic-security.groovy.j2
    dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
    mode: "644"

- name: Enable and start Jenkins services
  ansible.builtin.systemd_service:
    name: jenkins
    enabled: true
    state: restarted
    daemon_reload: true

- name: Wait Jenkins service to be ready
  ansible.builtin.shell:
    cmd: |
      set -o pipefail #
      journalctl -u jenkins | tail -n 1
    executable: /bin/bash
  register: jenkins_service_log
  until: jenkins_service_log.stdout is defined and "Started jenkins.service" in jenkins_service_log.stdout
  retries: 10
  changed_when: false

- name: Ensure the directory /opt/jenkins exists
  ansible.builtin.file:
    path: "{{ jenkins_cli_install_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: "755"

- name: Download Jenkins CLI
  ansible.builtin.get_url:
    url: "{{ jenkins_cli_jar }}"
    dest: "{{ jenkins_cli_install_dir }}/{{ jenkins_cli_jar | basename }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "644"

- name: Ensure the directory of /etc/jenkins exists
  ansible.builtin.file:
    path: /etc/jenkins
    mode: "775"
    state: directory

- name: Create casc .yml file
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/jenkins/{{ item }}
    mode: "644"
  loop:
    - credentials.yml
    - unclassified.yml
    - jenkins.yml
  loop_control:
    label: "{{ item }}"

- name: Install plugins
  ansible.builtin.command:
    chdir: "{{ jenkins_cli_install_dir }}"
    cmd: >
      java -jar jenkins-cli.jar -s {{ jenkins_url }} -auth {{ jenkins_admin_user }}:{{ jenkins_admin_password }}
      install-plugin {{ jenkins_plugins | join(" ") }} -deploy -restart
  changed_when: true

- name: Wait Jenkins service to be ready
  ansible.builtin.shell:
    cmd: |
      set -o pipefail #
      journalctl -u jenkins | tail -n 1
    executable: /bin/bash
  register: jenkins_service_log
  until: jenkins_service_log.stdout is defined and "Started jenkins.service" in jenkins_service_log.stdout
  retries: 10
  changed_when: false
