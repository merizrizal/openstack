---
- name: Install packages dependencies
  ansible.builtin.package:
    name:
      - perl
      - postfix
    state: present

- name: Download the add repository shell script
  ansible.builtin.get_url:
    url: "{{ gitlab_ce_install_script }}"
    dest: /home/{{ ansible_user }}/script.deb.sh
    mode: "644"

- name: Execute the add repository shell script
  ansible.builtin.command:
    chdir: /home/{{ ansible_user }}
    cmd: bash script.deb.sh
  changed_when: false

- name: Install Gitlab CE
  ansible.builtin.package:
    name: gitlab-ce
    state: present
  environment:
    EXTERNAL_URL: "{{ gitlab_url }}"

- name: Configure GitLab
  ansible.builtin.command:
    cmd: gitlab-ctl reconfigure
  changed_when: false

- name: Restart GitLab
  ansible.builtin.command:
    cmd: gitlab-ctl restart
  changed_when: false

- name: Setup Gitlab users
  ansible.builtin.include_tasks:
    file: setup_user.yml

- name: Configure Gitlab settings
  ansible.builtin.shell:
    cmd: |
      set -o pipefail #
      gitlab-rails console << EOF
      ApplicationSetting.current.update(allow_local_requests_from_web_hooks_and_services: true)
      ApplicationSetting.current.update(allow_local_requests_from_system_hooks: true)
      ApplicationSetting.current.update(outbound_local_requests_whitelist: ["{{ ip_addr_cidr }}", "10.0.0.0/8"])
      EOF
    executable: /bin/bash
  vars:
    ip_addr_cidr: "{{ ansible_host | ansible.utils.ipsubnet(16) }}"
  register: configure_settings
  changed_when: '"true" in configure_settings.stdout'
  failed_when: '"false" in configure_settings.stdout'
