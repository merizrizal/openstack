---
- name: Initialize database
  ansible.builtin.shell:
    cmd: |
      mysql -u root <<EOF
      CREATE DATABASE IF NOT EXISTS keystone;
      GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '{{ keystone_password }}';
      GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '{{ keystone_password }}';
      FLUSH PRIVILEGES;
      EOF
  changed_when: false

- name: Install Keystone package
  ansible.builtin.package:
    name: keystone
    state: present

- name: Reconfigure keystone.conf - comment out connection config
  ansible.builtin.lineinfile:
    path: /etc/keystone/keystone.conf
    regexp: "^connection ="
    line: "#connection ="
    backrefs: true

- name: Reconfigure keystone.conf - set MySQL MariaDB connection database
  ansible.builtin.replace:
    path: /etc/keystone/keystone.conf
    regexp: "^\\[database\\]\n(.*)\n"
    replace: |
      [database]
      connection = mysql+pymysql://keystone:{{ keystone_password }}@{{ controller01.hostname }}/keystone

- name: Reconfigure keystone.conf - comment out provider config
  ansible.builtin.lineinfile:
    path: /etc/keystone/keystone.conf
    regexp: "^provider ="
    line: "#provider ="
    backrefs: true

- name: Reconfigure keystone.conf - set Fernet token provider
  ansible.builtin.replace:
    path: /etc/keystone/keystone.conf
    regexp: "^\\[token\\]\n(.*)\n"
    replace: |
      [token]
      provider = fernet

- name: Populate the identity service database
  ansible.builtin.command:
    cmd: sudo -u keystone keystone-manage db_sync
  changed_when: false

- name: Initialize Fernet key repositories
  ansible.builtin.shell:
    cmd: |
      sudo -u keystone keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
      sudo -u keystone keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
  changed_when: false

- name: Bootstrap the identity service
  ansible.builtin.shell:
    cmd: |
      sudo -u keystone keystone-manage bootstrap --bootstrap-password {{ keystone_admin_password }} \
      --bootstrap-admin-url http://{{ controller01.hostname }}:5000/v3/ \
      --bootstrap-internal-url http://{{ controller01.hostname }}:5000/v3/ \
      --bootstrap-public-url http://{{ controller01.hostname }}:5000/v3/ \
  changed_when: false

- name: Reconfigure Apache2 configuration - add ServerName
  ansible.builtin.blockinfile:
    path: /etc/apache2/apache2.conf
    append_newline: true
    prepend_newline: true
    block: ServerName {{ controller01.hostname }}
    insertafter: EOF

- name: Set environment variables
  ansible.builtin.blockinfile:
    path: /etc/environment
    append_newline: true
    prepend_newline: true
    block: "{{ lookup('ansible.builtin.template', 'environment.j2') }}"
    insertafter: EOF
